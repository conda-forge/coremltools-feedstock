{% set name = "coremltools" %}
{% set version = "4.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  # The sdist on PyPI lacks at least
  #   - LICENSE.txt
  #   - CMakeLists.txt
  # so we use GitHub releases.
  url: https://github.com/apple/{{ name }}/archive/{{ version }}.tar.gz
  sha256: fdbc1e96bdeda0b23222864cb802053c67d8165a9e000e873d9b4028815ce61b

build:
  number: 2
  # The upstream package does not support Windows.
  skip: true  # [win]

requirements:
  build:
    - autoconf                               # [build_platform != target_platform]
    - automake                               # [build_platform != target_platform]
    - libtool                                # [build_platform != target_platform]
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - cmake
    - make
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
  host:
    - python
    - numpy
    - pip
  run:
    - python
    - {{ pin_compatible('numpy') }}
    - protobuf >=3.1.0
    - six >=1.1.0
    - attrs
    - sympy
    - scipy
    - tqdm
    - packaging
  run_constrained:
    - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default("10.9") }}  # [osx]
    - pytorch >=1.4

test:
  imports:
    - coremltools
    # required for predict() on macOS
    - coremltools.libcoremlpython  # [osx]
  commands:
    # TODO: change to running `coremlconverter --help`
    # when the upstream bug is fixed.
    - test -f ${PREFIX}/bin/coremlconverter

about:
  home: https://github.com/apple/coremltools
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE.txt
  summary: Core ML is an Apple framework to integrate machine learning models into your app. Core ML provides a unified representation for all models.

  description: |
    Core ML is an Apple framework to integrate machine learning models into your app.

    Use the coremltools Python package to convert models from third-party training libraries such as TensorFlow and PyTorch to the Core ML format. You can then use Core ML to integrate the models into your app.

    Core ML provides a unified representation for all models. Your app uses Core ML APIs and user data to make predictions, and to fine-tune models, all on the user’s device. Running a model strictly on the user’s device removes any need for a network connection, which helps keep the user’s data private and your app responsive.

    Core ML optimizes on-device performance by leveraging the CPU, GPU, and Neural Engine while minimizing its memory footprint and power consumption.
  doc_url: https://coremltools.readme.io/docs
  dev_url: https://github.com/apple/coremltools

extra:
  recipe-maintainers:
    - 1duo
    - aseemw
    - seibert
    - TobyRoseman
