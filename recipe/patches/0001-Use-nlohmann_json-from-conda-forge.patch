From 4ecf1e251662023b974baa387c7b3c1d461d2d92 Mon Sep 17 00:00:00 2001
From: Mark Harfouche <mark.harfouche@gmail.com>
Date: Sat, 23 Mar 2024 17:46:17 -0400
Subject: [PATCH 1/3] Use nlohmann_json from conda-forge

---
 modelpackage/src/utils/JsonMap.cpp | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/modelpackage/src/utils/JsonMap.cpp b/modelpackage/src/utils/JsonMap.cpp
index 400dcf2..6a14622 100644
--- a/modelpackage/src/utils/JsonMap.cpp
+++ b/modelpackage/src/utils/JsonMap.cpp
@@ -11,25 +11,25 @@
 #include <sstream>
 
 #include "JsonMap.hpp"
-#include "json.hpp"
+#include "nlohmann/json.hpp"
 
 using namespace nlohmann;
 
 class JsonMapImpl {
-    
+
 public:
-    
+
     nlohmann::json m_jsonObject;
-    
+
     JsonMapImpl();
     JsonMapImpl(std::istream& stream);
     JsonMapImpl(nlohmann::json j_init);
-    
+
     JsonMapImpl(const JsonMapImpl&) = delete;
     JsonMapImpl(JsonMapImpl&&) = delete;
     JsonMapImpl& operator=(const JsonMapImpl&) = delete;
     JsonMapImpl& operator=(JsonMapImpl&&) = delete;
-    
+
     /* ==== Key operations ==== */
 
     bool hasKey(const std::string& key) const;
@@ -44,7 +44,7 @@ public:
 
     void setString(const std::string& key, const std::string& value);
     void setObject(const std::string& key, std::unique_ptr<JsonMapImpl> value);
-    
+
     void serialize(std::ostream& stream);
     void deserialize(std::istream& stream);
 };
-- 
2.43.2

